{"version":3,"sources":["webpack://Peace.AsyncValidator/webpack/universalModuleDefinition","webpack://Peace.AsyncValidator/webpack/bootstrap","webpack://Peace.AsyncValidator/external {\"root\":[\"Peace\",\"Core\"],\"commonjs\":\"peacetrue-js/dist/peace.core\",\"commonjs2\":\"peacetrue-js/dist/peace.core\",\"amd\":\"peacetrue-js/dist/peace.core\"}","webpack://Peace.AsyncValidator/./index.js","webpack://Peace.AsyncValidator/./src/rules.js","webpack://Peace.AsyncValidator/./src/requires.js","webpack://Peace.AsyncValidator/./src/required_if.js","webpack://Peace.AsyncValidator/./src/unique.js","webpack://Peace.AsyncValidator/external \"axios\"","webpack://Peace.AsyncValidator/./src/message_generator.js","webpack://Peace.AsyncValidator/./src/messages_zh_CN.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__6__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Rules","register","Generator","setField","desc","setFields","Core","rules","messages","fields","lang","validators","[object Object]","options","rule","setMessage","message","callback","source","result","apply","arguments","Promise","resolve","then","isValid","ruleOptions","field","assign","keys","forEach","values","Array","isArray","messageOptions","_field","_value","Error","format","use","names","isEmpty","requires","filter","length","*","zh_CN","requiredIf","target","Axios","unique","original","params","url","successHandler","errorHandler","descriptor","typeRuleValue","ruleName","ruleValue","validator","asyncValidator","console","info","types","replace","default","required","enum","whitespace","date","parse","invalid","string","method","array","number","boolean","integer","float","regexp","email","hex","len","min","max","range","pattern","mismatch","clone","cloned","JSON","stringify"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,gCAAAA,QAAA,UACA,mBAAAC,eAAAC,IACAD,OAAA,yCAAAJ,GACA,iBAAAC,QACAA,QAAA,eAAAD,EAAAG,QAAA,gCAAAA,QAAA,WAEAJ,EAAA,MAAAA,EAAA,UAAqCA,EAAA,qBAAAC,EAAAD,EAAA,WAAAA,EAAA,QARrC,CASCO,KAAA,SAAAC,EAAAC,GACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAV,QAGA,IAAAC,EAAAO,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAZ,QAAA,IAUA,OANAa,EAAAH,GAAAI,KAAAb,EAAAD,QAAAC,IAAAD,QAAAS,GAGAR,EAAAW,GAAA,EAGAX,EAAAD,QA0DA,OArDAS,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAjB,EAAAkB,EAAAC,GACAV,EAAAW,EAAApB,EAAAkB,IACAG,OAAAC,eAAAtB,EAAAkB,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAzB,GACA,oBAAA0B,eAAAC,aACAN,OAAAC,eAAAtB,EAAA0B,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAtB,EAAA,cAAiD4B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAnC,GACA,IAAAkB,EAAAlB,KAAA8B,WACA,WAA2B,OAAA9B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAQ,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,mBClFAzC,EAAAD,QAAAM,mBCAA,IAAAqC,EAAYlC,EAAQ,GACpBkC,EAAAC,SAAenC,EAAQ,IACvBkC,EAAAC,SAAenC,EAAQ,IACvBkC,EAAAC,SAAenC,EAAQ,IAEvB,IAAAoC,EAAgBpC,EAAQ,GAYxBR,EAAAD,QAAA,CAAkB2C,QAAAE,YAAAC,SAVlB,SAAA5B,EAAA6B,GACAJ,EAAAG,SAAA5B,EAAA6B,GACAF,EAAAC,SAAA5B,EAAA6B,IAQkBC,UALlB,SAAA9B,EAAA6B,GACAJ,EAAAK,UAAA9B,EAAA6B,GACAF,EAAAG,UAAA9B,EAAA6B,sBCdA,IAAAE,EAAWxC,EAAQ,GAmCnB,MAAAkC,EAAA,CACAO,MAAA,GACAC,SAAA,GACAC,OAAA,GACAC,KAAA,QACAC,WAAA,IAGArD,EAAAD,QAAA,CAEAuD,SAAAC,GA3CA,IAAAtC,EA+CA,OAHAyB,EAAAO,MAAAM,EAAAtC,MAAAsC,EAAAC,KACApD,KAAAqD,WAAAF,EAAAtC,KAAAsC,EAAAG,SACAhB,EAAAW,WAAAE,EAAAtC,OA9CAA,EA8CAsC,EAAAtC,KA7CA,CACAqC,UAAAE,EAAA7B,EAAAgC,EAAAC,EAAAL,GACA,IAAAM,EAAAnB,EAAAO,MAAAhC,GAAA6C,MAAA1D,KAAA2D,WACAF,aAAAG,UAAAH,EAAAG,QAAAC,QAAAJ,IACAA,EAAAK,KAAAC,IACA,eAAAA,EAAA,OACA,QAAAA,EAAA,OAAAR,IAEA,IAAAS,EAAAZ,EAAAvC,GAEAyC,EAAAU,EAAAV,SAAAH,EAAAL,SAAAjC,IAAAyB,EAAAQ,SAAAjC,GAAAyB,EAAAU,OAAAV,EAAAQ,SAAAjC,GAAA,KAEAoD,GAAAd,EAAAJ,QAAA,IAAiDK,EAAAa,QAAA3B,EAAAS,OAAAK,EAAAa,QAAAb,EAAAa,MAEjDD,EAAAhD,OAAAkD,OAAA,GAA8CF,GAC9ChD,OAAAmD,KAAAH,GAAAI,QAAAvC,IACA,IAAAwC,EAAAL,EAAAnC,GACAyC,MAAAC,QAAAF,GACAA,EAAAD,QAAA,CAAA7C,EAAAjB,KACAiB,KAAAe,EAAAS,SAAAsB,EAAA/D,GAAAgC,EAAAS,OAAAxB,MAGAA,KAAAe,EAAAS,SAAAiB,EAAAnC,GAAAS,EAAAS,OAAAxB,MAGA,IAAAiD,EAAAxD,OAAAkD,OAAA,CAAoDO,OAAAR,EAAAS,OAAAnD,GAA6ByC,GACjFT,EAAA,IAAAoB,MAAA/B,EAAAgC,OAAAtB,EAAAkB,UAoBAxE,MAEA6E,IAAA,CAAAhE,EAAAsC,IACAnC,OAAAkD,OAAA,CAA8BhB,CAAArC,GAAAsC,GAAgBb,EAAAW,WAAApC,IAE9CqC,QAAAF,EAAA,MAEA,OADAV,EAAAU,OACAhD,MAEAkD,WAAArC,EAAAyC,EAAAN,EAAA,KAMA,MALA,iBAAAM,EACAhB,EAAAQ,SAAAjC,GAAAmC,GAAAM,EAEAhB,EAAAQ,SAAAjC,GAAAyC,EAEAtD,MAEAkD,YAAAJ,EAAAE,EAAA,KAIA,OAHAhC,OAAAmD,KAAArB,GAAAsB,QAAAvC,IACAS,EAAAQ,SAAAjB,GAAAmB,GAAAF,EAAAjB,KAEA7B,MAEAkD,SAAArC,EAAA6B,GAEA,OADAJ,EAAAS,OAAAlC,GAAA6B,EACA1C,MAEAkD,UAAA4B,GAEA,OADA9D,OAAAkD,OAAA5B,EAAAS,OAAA+B,GACA9E,wBC9EA,IAAA4C,EAAWxC,EAAQ,GAEnBR,EAAAD,QAAA,CACAkB,KAAA,WAEAuC,KAAA,SAAAA,EAAA7B,EAAAgC,EAAAC,EAAAL,GACA,QAAAP,EAAAmC,QAAAxD,IACA6B,EAAA4B,SAAAjC,OAAAkC,OAAApE,IAAA+B,EAAAmC,QAAAxD,EAAAV,KAAAqE,OAAA,GAEA5B,QAAA,CAAc6B,IAAA,8BAAqBC,MAAA,qCCTnC,IAAAxC,EAAWxC,EAAQ,GAEnBR,EAAAD,QAAA,CACAkB,KAAA,aAEAuC,KAAA,SAAAA,EAAA7B,EAAAgC,EAAAC,EAAAL,GACA,GAAAP,EAAAmC,QAAAxD,GAAA,SACA,IAAAyC,EAAAZ,EAAAiC,WACA,QAAAzC,EAAAmC,QAAAxD,EAAAyC,EAAAR,WAEAZ,EAAAmC,QAAAxD,EAAAyC,EAAAsB,UAEAhC,QAAA,CAAc6B,IAAA,uDAA8CC,MAAA,8CCZ5D,IAAAxC,EAAWxC,EAAQ,GACnBmF,EAAYnF,EAAQ,GAEpBR,EAAAD,QAAA,CACAkB,KAAA,SAEAuC,KAAA,SAAAA,EAAA7B,EAAAgC,EAAAC,EAAAL,GACA,GAAAP,EAAAmC,QAAAxD,GAAA,SAEA,IAAAyC,EAAAZ,EAAAoC,OACA,GAAAjE,IAAAyC,EAAAyB,SAAA,UAEAzB,EAAA0B,SAAA1B,EAAA0B,OAAAvC,IAAA,CAAoED,CAAAC,EAAAc,OAAAd,EAAA5B,SACpE,IAAAmE,EAAA1B,EAAA0B,OAAA,CAAyCzB,MAAAb,EAAAa,MAAA1C,UAczC,OAAAgE,EACApE,IAAA6C,EAAA2B,IAAA,CAAmCD,WACnC5B,KAAAtC,GAAAoC,QAAAC,QAAAG,EAAA4B,eAAA5B,EAAA4B,eAAApE,MACAA,IACAwC,EAAA6B,cAAA7B,EAAA6B,aAAArE,GACAoC,QAAAC,QAAA,cAGAP,QAAA,CAAc6B,IAAA,0BAAcC,MAAA,mCCnC5BxF,EAAAD,QAAAO,mBCAA,IAAA4C,EAAe1C,EAAQ,GAYvBR,EAAAD,QAAA,CACAoD,OAAA,GACAG,SAAArC,EAAA6B,GAEA,OADA1C,KAAA+C,OAAAlC,GAAA6B,EACA1C,MAEAkD,UAAAH,GAEA,OADA/B,OAAAkD,OAAAlE,KAAA+C,UACA/C,MAEAkD,SAAA4C,EAAA/C,GAuCA,OAtCAA,EAAA/B,OAAAkD,OAAA,GAAiClE,KAAA+C,UACjC/B,OAAAmD,KAAA2B,GAAA1B,QAAAH,IACA,IAEA8B,EAFAlD,EAAAiD,EAAA7B,GACAK,MAAAC,QAAA1B,OAAA,CAAAA,IAEAA,EAAAuB,QAAA,CAAAhB,EAAA9C,KACA,IAMAgD,EANA0C,EAAAhF,OAAAmD,KAAAf,GAAA,GACA6C,EAAA7C,EAAA4C,GAGA,GAFA,IAAA1F,IAAAyF,EAAA,SAAAC,EAAA,SAAAC,KAEA7C,EAAAE,SAAAF,EAAA8C,WAAA9C,EAAA+C,gBAGA,OAFAC,QAAAC,KAAAjD,EAAA2C,EAAAC,EAAAC,GAEAD,GACA,WAGA1C,GADAA,GADAA,EAAAR,WAAAwD,MAAAL,IACAM,QAAA,KAAAxD,EAAAkB,KACAsC,QAAA,KAAAzD,EAAAwD,MAAAL,IACA7C,EAAAE,UACA,MACA,cACA,eACA,WACA,iBAGAA,GADAA,GADAA,EAAAR,WAAAkD,IACAO,QAAA,KAAAxD,EAAAkB,KACAsC,QAAA,KAAAN,GACA7C,EAAAE,UACA,MACA,QAGAA,GADAA,GADAA,EAAAR,WAAAiD,GAAAC,IACAO,QAAA,KAAAxD,EAAAkB,KACAsC,QAAA,KAAAN,GACA7C,EAAAE,eAKAwC,mBC7DAlG,EAAAD,QAAA,CACAmD,SAAA,CACA0D,QAAA,aACAC,SAAA,UACAC,KAAA,gBACAC,WAAA,UACAC,KAAA,CACAhC,OAAA,wBACAiC,MAAA,wBACAC,QAAA,iBAEAR,MAAA,CACAS,OAAA,aACAC,OAAA,wBACAC,MAAA,aACAjF,OAAA,aACAkF,OAAA,aACAN,KAAA,aACAO,QAAA,aACAC,QAAA,aACAC,MAAA,aACAC,OAAA,gBACAC,MAAA,gBACA5B,IAAA,gBACA6B,IAAA,iBAEAT,OAAA,CACAU,IAAA,mBACAC,IAAA,kBACAC,IAAA,kBACAC,MAAA,wBAEAV,OAAA,CACAO,IAAA,aACAC,IAAA,aACAC,IAAA,aACAC,MAAA,qBAEAX,MAAA,CACAQ,IAAA,kBACAC,IAAA,gBACAC,IAAA,eACAC,MAAA,uBAEAC,QAAA,CACAC,SAAA,qBAEAC,MAAA,WACA,IAAAC,EAAAC,KAAApB,MAAAoB,KAAAC,UAAAlI,OAEA,OADAgI,EAAAD,MAAA/H,KAAA+H,MACAC,IAGA1B,MAAA,CACAS,OAAA,MACAC,OAAA,KACAC,MAAA,KACAjF,OAAA,KACAkF,OAAA,KACAN,KAAA,KACAO,QAAA,MACAC,QAAA,KACAC,MAAA,KACAC,OAAA,QACAC,MAAA,OACA5B,IAAA,KACA6B,IAAA","file":"peace.async-validator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"peacetrue-js/dist/peace.core\"), require(\"axios\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"peacetrue-js/dist/peace.core\", \"axios\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AsyncValidator\"] = factory(require(\"peacetrue-js/dist/peace.core\"), require(\"axios\"));\n\telse\n\t\troot[\"Peace\"] = root[\"Peace\"] || {}, root[\"Peace\"][\"AsyncValidator\"] = factory(root[\"Peace\"][\"Core\"], root[\"axios\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__6__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","let Rules = require('./src/rules');\nRules.register(require('./src/requires'));\nRules.register(require('./src/required_if'));\nRules.register(require('./src/unique'));\n\nlet Generator = require('./src/message_generator');\n\nfunction setField(name, desc) {\n    Rules.setField(name, desc);\n    Generator.setField(name, desc);\n}\n\nfunction setFields(name, desc) {\n    Rules.setFields(name, desc);\n    Generator.setFields(name, desc);\n}\n\nmodule.exports = {Rules, Generator, setField, setFields};","let Core = require('peacetrue-js/dist/peace.core');\n\nfunction join(name) {\n    return {\n        validator(rule, value, callback, source, options) {\n            let result = Rules.rules[name].apply(this, arguments);\n            if (!(result instanceof Promise)) result = Promise.resolve(result);\n            result.then(isValid => {\n                if (isValid === 'ignored') return;//请求出错时，无法判断是成功还是失败，忽略此次验证\n                if (isValid === true) return callback();\n                //规则选项\n                let ruleOptions = rule[name];\n                //消息国际化\n                let message = ruleOptions.message || options.messages[name] || Rules.messages[name][Rules.lang] || Rules.messages[name]['*'];\n                //当前字段名本地化\n                let field = (options.fields || {})[rule.field] || Rules.fields[rule.field] || rule.field;\n                //选项字段名本地化\n                ruleOptions = Object.assign({}, ruleOptions);\n                Object.keys(ruleOptions).forEach(key => {\n                    let values = ruleOptions[key];\n                    if (Array.isArray(values)) {\n                        values.forEach((value, i) => {\n                            (value in Rules.fields) && (values[i] = Rules.fields[value]);\n                        });\n                    } else {\n                        (value in Rules.fields) && (ruleOptions[key] = Rules.fields[value]);\n                    }\n                });\n                let messageOptions = Object.assign({_field: field, _value: value}, ruleOptions);\n                callback(new Error(Core.format(message, messageOptions)));\n            });\n        },\n    };\n}\n\nconst Rules = {\n    rules: {},\n    messages: {},\n    fields: {},\n    lang: 'zh_CN',\n    validators: {},\n};\n\nmodule.exports = {\n    /**{name:String, rule:Function, message:String|Object}*/\n    register(options) {\n        Rules.rules[options.name] = options.rule;\n        this.setMessage(options.name, options.message);\n        Rules.validators[options.name] = join(options.name);\n        return this;\n    },\n    use(name, options) {\n        return Object.assign({[name]: options}, Rules.validators[name]);\n    },\n    setLang(lang = 'en') {\n        Rules.lang = lang;\n        return this;\n    },\n    setMessage(name, message, lang = '*') {\n        if (typeof message === 'string') {\n            Rules.messages[name][lang] = message;\n        } else {\n            Rules.messages[name] = message;\n        }\n        return this;\n    },\n    setMessages(messages, lang = \"*\") {\n        Object.keys(messages).forEach(key => {\n            Rules.messages[key][lang] = messages[key];\n        });\n        return this;\n    },\n    setField(name, desc) {\n        Rules.fields[name] = desc;\n        return this;\n    },\n    setFields(names) {\n        Object.assign(Rules.fields, names);\n        return this;\n    },\n};","let Core = require('peacetrue-js/dist/peace.core');\n\nmodule.exports = {\n    name: 'requires',\n    /** {fields:Array} */\n    rule: function (rule, value, callback, source, options) {\n        if (Core.isEmpty(value)) return true;\n        return rule.requires.fields.filter(name => !Core.isEmpty(value[name])).length > 0;\n    },\n    message: {'*': 'one of {fields} is required', 'zh_CN': '{fields}中至少一个有值'}\n};\n","let Core = require('peacetrue-js/dist/peace.core');\n\nmodule.exports = {\n    name: 'requiredIf',\n    /** {source:String,target:String} */\n    rule: function (rule, value, callback, source, options) {\n        if (Core.isEmpty(value)) return true;\n        let ruleOptions = rule.requiredIf;\n        return Core.isEmpty(value[ruleOptions.source])\n            ? true\n            : !Core.isEmpty(value[ruleOptions.target]);\n    },\n    message: {'*': '{target} must have a value when {source} has a value', 'zh_CN': '{source}有值时，{target}必须有值'}\n};\n","let Core = require('peacetrue-js/dist/peace.core');\nlet Axios = require('axios');\n\nmodule.exports = {\n    name: 'unique',\n    /** {url:String,params:Function,original:*} */\n    rule: function (rule, value, callback, source, options) {\n        if (Core.isEmpty(value)) return true;\n\n        let ruleOptions = rule.unique;\n        if (value === ruleOptions.original) return true;\n\n        !ruleOptions.params && (ruleOptions.params = (options) => ({[options.field]: options.value}));\n        let params = ruleOptions.params({field: rule.field, value: value});\n\n        // ruleOptions.params\n        // && Object.keys(ruleOptions.params).forEach(key => {\n        //     let value = rule.unique.params[key];\n        //     params[key] = value instanceof Function ? value() : value;\n        // });\n        //\n        // let original = ruleOptions.original;\n        // if (original) {\n        //     if (Core.getType(original) !== 'object') original = {[rule.field]: original};\n        //     if (Object.keys(params).filter(key => params[key] !== original[key]).length === 0) return true;\n        // }\n\n        return Axios\n            .get(ruleOptions.url, {params: params})\n            .then(t => Promise.resolve(ruleOptions.successHandler ? ruleOptions.successHandler(t) : t),\n                t => {\n                    ruleOptions.errorHandler && ruleOptions.errorHandler(t);\n                    return Promise.resolve('ignored');\n                });\n    },\n    message: {'*': '{_field} must be unique', 'zh_CN': '{_field} 必须是唯一的'}\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","let messages = require('./messages_zh_CN');\n\n/*\n* name: {type:'string',required:true,min:2,max:6}\n* => name: {required:true,message:'%s 是必须的'}\n* => name: {required:true,message:'姓名 是必须的'}\n*\n* name: {type:'string'}\n* => name: {type:'string',message:'%s 不是一个 %s'}\n* => name: {type:'string',message:'名称 不是一个 字符串'}\n*/\n\nmodule.exports = {\n    fields: {},\n    setField(name, desc) {\n        this.fields[name] = desc;\n        return this;\n    },\n    setFields(fields) {\n        Object.assign(this.fields, fields);\n        return this;\n    },\n    generate(descriptor, fields) {\n        fields = Object.assign({}, this.fields, fields);\n        Object.keys(descriptor).forEach(field => {\n            let rules = descriptor[field];\n            if (!Array.isArray(rules)) rules = [rules];\n            let typeRuleValue;\n            rules.forEach((rule, i) => {\n                let ruleName = Object.keys(rule)[0];\n                let ruleValue = rule[ruleName];\n                if (i === 0) typeRuleValue = ruleName !== 'type' ? 'string' : ruleValue;\n                //已指定消息或者自定义的规则 不处理\n                if (rule.message || rule.validator || rule.asyncValidator) return;\n                console.info(rule, typeRuleValue, ruleName, ruleValue);\n                let message;\n                switch (ruleName) {\n                    case 'type':\n                        message = messages.messages.types[ruleValue];\n                        message = message.replace('%s', fields[field]);\n                        message = message.replace('%s', messages.types[ruleValue]);\n                        rule.message = message;\n                        break;\n                    case 'default':\n                    case 'required':\n                    case 'enum':\n                    case 'whitespace':\n                        message = messages.messages[ruleName];\n                        message = message.replace('%s', fields[field]);\n                        message = message.replace('%s', ruleValue);\n                        rule.message = message;\n                        break;\n                    default:\n                        message = messages.messages[typeRuleValue][ruleName];\n                        message = message.replace('%s', fields[field]);\n                        message = message.replace('%s', ruleValue);\n                        rule.message = message;\n                        break;\n                }\n            });\n        });\n        return descriptor;\n    }\n};","module.exports = {\n    messages: {\n        'default': '字段 %s 验证错误',\n        required: '%s 是必须的',\n        'enum': '%s 必须是 %s 中之一',\n        whitespace: '%s 不能为空',\n        date: {\n            format: '%s 日期 %s 对于格式 %s 是无效的',\n            parse: '%s 日期不能够被解析, %s 是无效的 ',\n            invalid: '%s 日期 %s 是无效的'\n        },\n        types: {\n            string: '%s 不是一个 %s',\n            method: '%s 不是一个 %s (function)',\n            array: '%s 不是一个 %s',\n            object: '%s 不是一个 %s',\n            number: '%s 不是一个 %s',\n            date: '%s 不是一个 %s',\n            boolean: '%s 不是一个 %s',\n            integer: '%s 不是一个 %s',\n            float: '%s 不是一个 %s',\n            regexp: '%s 不是一个有效的 %s',\n            email: '%s 不是一个有效的 %s',\n            url: '%s 不是一个有效的 %s',\n            hex: '%s 不是一个有效的 %s'\n        },\n        string: {\n            len: '%s 必须精确地是 %s 个字符',\n            min: '%s 必须至少是 %s 个字符',\n            max: '%s 不能够长于 %s 个字符',\n            range: '%s 必须在 %s 和 %s 个字符之间'\n        },\n        number: {\n            len: '%s 必须等于 %s',\n            min: '%s 不能小于 %s',\n            max: '%s 不能大于 %s',\n            range: '%s 必须在 %s 和 %s 之间'\n        },\n        array: {\n            len: '%s 长度必须精确地是 %s ',\n            min: '%s 长度不能小于 %s ',\n            max: '%s 长度不能大于 %s',\n            range: '%s 长度必须在 %s 和 %s 之间'\n        },\n        pattern: {\n            mismatch: '%s 值 %s 不能匹配规则 %s'\n        },\n        clone: function clone() {\n            let cloned = JSON.parse(JSON.stringify(this));\n            cloned.clone = this.clone;\n            return cloned;\n        }\n    },\n    types: {\n        string: '字符串',\n        method: '方法',\n        array: '数组',\n        object: '对象',\n        number: '数字',\n        date: '日期',\n        boolean: '布尔值',\n        integer: '整数',\n        float: '小数',\n        regexp: '正则表达式',\n        email: '邮件地址',\n        url: '网址',\n        hex: '16进制格式'\n    }\n};\n"],"sourceRoot":""}